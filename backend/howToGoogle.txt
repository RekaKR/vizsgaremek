  const googleSignIn = () => {
    window.location.href =
      "https://accounts.google.com/o/oauth2/v2/auth?response_type=code&prompt=select_account&client_id=250888136535-f09p91gf3rkqjp5v0q7ho11o0cf8kvi7.apps.googleusercontent.com&scope=openid%20email&redirect_uri=http://localhost:3000/login"
  }

  //belép->
  //kód kinyerése
  /*
    const urlSearchParams = new URLSearchParams(window.location.search)
    const params = Object.fromEntries(urlSearchParams.entries())
    console.log(params)
  */
  //backenden összerakok egy req-et a https://oauth2.googleapis.com/token-re
  //visszakapjuk a token-t és ki kell nyernünk a sub-ot belőle
  //küldünk egy session tocen-t neki -> csinálunk egy jwt-t, amit mi írunk alá egy saját secret key-vel -> frontendre küldés (a sub benne lesz az előzőből)
  //.env secrectkey elmentése
  //localstorage-ben eltárolva -> localstorage-ből elővenni és hozzáadni a header-hez minden egyes requestnél (contetntype-mysessiontocen)


the page has a "Login" button which redirects the user to account.google.com
the site has a Login page which reads the auth code from the url
send it to the backend
the backend has an endpoint /login
/login receives the auth code in a post request's body
validates it with google
parses the response of google
saves the user to the userdb if it is not yet saved, and creates a jwt signed with a secret key, with the userid in the payload
and sends it back to the frontend